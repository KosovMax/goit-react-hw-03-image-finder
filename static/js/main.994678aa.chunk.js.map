{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/hits-api.js","components/App.js","index.js"],"names":["Searchbar","state","search","handleChange","target","setState","value","handleSubmit","evt","preventDefault","onSearch","props","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","name","onChange","Component","ImageGalleryItem","id","src","alt","showIdModel","onClick","ImageGallery","imageGalleries","map","webformatURL","defaultProps","Button","children","allyProps","style","textAlign","modalRoot","document","querySelector","Modal","componentDidMount","window","addEventListener","handler","componentWillUnmount","removeEventListener","key","closeModal","handleBackdrop","currentTarget","ReactDOM","createPortal","searchQuery","page","perPage","axios","get","then","response","data","hits","App","loading","error","srcModal","showModal","updateSerach","query","componentDidUpdate","prevProps","prevState","fetchHits","hitsApi","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","console","log","image","find","item","largeImageURL","toggleModal","message","length","color","height","width","render"],"mappings":"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","file":"static/js/main.994678aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Searchbar extends Component{\r\n\r\n    state = {\r\n        search: ''\r\n    }\r\n\r\n    handleChange = ({target}) => {\r\n        this.setState({ search: target.value });\r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        const { onSearch } = this.props;\r\n        const { search } = this.state;\r\n\r\n        onSearch(search);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n                name=\"search\"\r\n                value={this.state.search}\r\n                onChange = {this.handleChange}\r\n                />\r\n            </form>\r\n            </header>\r\n        )\r\n    }\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({id, src, alt, showIdModel}){\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img src={src} alt={alt} onClick={()=>showIdModel(id)} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n    src:'https://dummyimage.com/640x480/2a2a2a/ffffff&text=No+image',\r\n    alt:''\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    src:PropTypes.string.isRequired,\r\n    alt:PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from './../ImageGalleryItem/ImageGalleryItem'\r\n\r\nexport default function ImageGallery({imageGalleries, showIdModel}){\r\n\r\n    return(\r\n        <ul className=\"ImageGallery\">\r\n            {imageGalleries.map(({id, webformatURL}) => (\r\n                <ImageGalleryItem key={id} src={webformatURL} showIdModel={showIdModel} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n    imageGalleries:[]\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    imageGalleries:PropTypes.array.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({onClick, children, allyProps}) {\r\n    return(\r\n        <div style={{textAlign:\"center\"}}>\r\n            <button type=\"button\" onClick={onClick} className=\"Button\" {...allyProps}>{children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    onClick:()=>null,\r\n    children:null\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick:PropTypes.func,\r\n    children:PropTypes.node\r\n}","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component{\r\n\r\n    componentDidMount = () => {\r\n        window.addEventListener('keydown', this.handler)\r\n    }\r\n    componentWillUnmount = () => {\r\n        window.removeEventListener('keydown', this.handler)\r\n    }\r\n\r\n    handler = ({ key }) => {\r\n        if (key === 'Escape') this.props.closeModal()\r\n    }\r\n\r\n    handleBackdrop = evt =>{\r\n        // console.log(evt.currentTarget);\r\n        // console.log(evt.target);\r\n\r\n        if(evt.currentTarget === evt.target) this.props.closeModal()\r\n    }\r\n\r\n    render(){\r\n        const { src } = this.props\r\n        return ReactDOM.createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdrop} >\r\n                <div className=\"Modal\">\r\n                    <img src={src} alt=\"\" />\r\n                </div>\r\n            </div>, \r\n            modalRoot\r\n        );\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst API_KEY = '19319242-70903095163a85f904f3acecb';\r\n\r\n// axios.defaults.headers.common['Authorization'] = 'Bearer 19319242-70903095163a85f904f3acecb';\r\n\r\nconst fetchHits = ({ searchQuery = '',  page = 1, perPage = 12}) =>{\r\n\r\n    return axios\r\n        .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`)\r\n        .then(response => response.data.hits)\r\n\r\n}\r\n\r\nexport default { fetchHits }","import React, { Component } from 'react';\n\n\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\n\nimport hitsApi from './../services/hits-api'\n\n\nexport default class App extends Component{\n\n    state = {\n        imageGalleries:[],\n        page:1,\n        searchQuery:'', \n\n        loading: false,\n        error: null,\n\n        srcModal:'',\n        showModal:false\n    }\n\n    updateSerach = (query) =>{\n        if(this.state.searchQuery !== query)\n            this.setState({\n                searchQuery:query,\n                imageGalleries:[],\n                page:1\n            })\n\n    }\n\n    componentDidUpdate = (prevProps, prevState) =>{\n        // console.log(prevProps, prevState, snapshot)\n        \n        if(prevState.searchQuery !== this.state.searchQuery){\n            this.fetchHits()\n        }\n    }\n\n    fetchHits = () =>{\n\n        const { searchQuery, page } = this.state; \n\n        this.setState({ loading: true });\n    \n        hitsApi.fetchHits({searchQuery:searchQuery, page:page}).then(data => {\n                    this.setState(prevState => ({\n                        imageGalleries: [...prevState.imageGalleries, ...data],\n                        page: prevState.page+1\n                    }))\n                })\n            .catch(error => this.setState({ error:error }))\n            .finally(() => {\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n                this.setState({ loading: false })\n            })\n    }\n\n    showIdModel = (id) =>{\n        const { imageGalleries } = this.state;\n        console.log(id);\n\n        const image = imageGalleries.find((item) => {return item.id === id})\n\n        console.log(image);\n        this.setState({\n            srcModal:image.largeImageURL,\n            showModal:true\n        })\n    }\n\n    toggleModal = () =>{\n        this.setState(({showModal}) => ({\n            showModal: !showModal\n        }))\n    }\n    \n\n    render(){\n        const { imageGalleries, loading, error, srcModal, showModal} = this.state;\n\n        console.log(this.state);\n\n        return (\n           <div className=\"App\">   \n                <Searchbar onSearch={this.updateSerach} />\n                {error && <p>Whoops, something went wrong: {error.message}</p>}\n                {imageGalleries.length > 0 && <ImageGallery imageGalleries={imageGalleries} showIdModel={this.showIdModel} /> }\n                {loading && <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} style={{textAlign:\"center\"}} />}\n                {imageGalleries.length > 0 && <Button onClick={this.fetchHits} >Load more</Button>}\n                {showModal && <Modal src={srcModal} closeModal={this.toggleModal} />}\n           </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles.css';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}